{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "properties": {
        "id": {
            "$ref": "./common-patterns.json#/properties/uuid",
            "description": "A unique identifier for the object, uuid string. This includes hyphens, conforming to UUID pattern."
        },
        "answer": {"$ref": "#/definitions/answer_type"},
        "assetType": {
            "type": "string",
            "enum": ["QUESTION"],
            "description": "Indicates the type of the asset. Currently, all records have 'QUESTION' as assetType. This field allows for potential future scaling and diversification of asset types."
        },
        "createdAt": {
            "type": "string",
            "format": "date-time"
        },
        "orderId": {
            "type": "integer",
            "$comment": "This might need to be removed from the question schema since its more of a property of a specific quiz"
        },
        "passageId": {"type": "string"},
        "quizId": {
            "$ref": "./common-patterns.json#/properties/uuid",
            "description": "A quiz id represents a specific quiz like SAT, ACT, etc"
        },
        "sectionId": {
            "$ref": "./common-patterns.json#/properties/uuid",
            "description": "A section here refers to an identifier that represents a section object of an exam object that incorporates questions that are answered within the same group"
        },
        "tags": {
            "$ref": "#/definitions/choices_type",
            "description": "These are the actual tags connecting the question to specific content, grade, subscore, difficulty, and cross-score parameters"
        },
        "time": {
            "type": "integer",
            "description": "Reserved for future scenerio"
        },
        "title": {
            "type": "string",
            "description": "This is the prompt: the actual question that is being asked"
        },
        "updatedAt": {
            "type": "string",
            "format": "date-time"
        },
        "userId": {
            "$ref": "./common-patterns.json#/properties/uuid",
            "description": "Identifier of the user who last updated or created the tag. This field is managed by DynamoDB."
        },
        "__typename": {
            "type": "string",
            "description": "Typically used in GraphQL to store the name of the object type. In this context, it is the same as 'assetType', and for all current records, the value is 'Tag'.",
            "enum": ["Question"]
        }
    },
    "required": [
        "id",
        "answer",
        "assetType",
        "createdAt",
        "passageId",
        "quizId",
        "sectionId",
        "tags",
        "time",
        "title",
        "updatedAt",
        "userId",
        "__typename"
    ],
    "definitions": {
        "choices_type": {
            "type": "array",
            "minItems": 1,
            "items": {"type": "string"}
        },
        "answer_type": {
            "type": "object",
            "properties": {
                "answerType": {
                    "type": "string",
                    "enum": [
                        "SINGLE_CORRECT",
                        "SPR"
                    ],
                    "description": "For definition of SPR - Student Produced Response, see https://satsuite.collegeboard.org/digital/whats-on-the-test/math/student-produced"
                },
                "choices": {"$ref": "#/definitions/choices_type"},
                "isCorrect": {"type": "string"},
                "rationale": {
                    "type": "string",
                    "description": "This is the written reasoning for the correct answer"
                },
                "video": {
                    "type": "string",
                    "format": "uri",
                    "description": "This is the video solution for a question in the exam"
                }
            },
            "required": [
                "answerType",
                "choices",
                "isCorrect"
            ]
        },
        "tags": {
            "type": "array",
            "items": {"$ref": "./tag-schema.json#/properties/id"}
        }
    }
}